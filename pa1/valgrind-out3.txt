==16147== Memcheck, a memory error detector
==16147== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16147== Using Valgrind-3.17.0-07f0cdcbb4-20210319X and LibVEX; rerun with -h for copyright info
==16147== Command: ./Lex infile3.txt outfile3.txt
==16147== 
--16147-- Valgrind options:
--16147--    --leak-check=full
--16147--    -v
--16147-- Contents of /proc/version:
--16147--   Linux version 3.10.0-1160.76.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Wed Aug 10 16:21:17 UTC 2022
--16147-- 
--16147-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--16147-- Page sizes: currently 4096, max supported 4096
--16147-- Valgrind library directory: /opt/rh/devtoolset-11/root/usr/libexec/valgrind
--16147-- Reading syms from /afs/cats.ucsc.edu/users/m/acompala/cse101/pa1/Lex
--16147-- Reading syms from /usr/lib64/ld-2.17.so
--16147--   Considering /usr/lib/debug/.build-id/62/c449974331341bb08dcce3859560a22af1e172.debug ..
--16147--   .. build-id is valid
--16147-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/memcheck-amd64-linux
--16147--    object doesn't have a symbol table
--16147--    object doesn't have a dynamic symbol table
--16147-- Scheduler: using generic scheduler lock implementation.
--16147-- Reading suppressions file: /opt/rh/devtoolset-11/root/usr/libexec/valgrind/default.supp
==16147== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16147-by-acompala-on-unix6.lt.ucsc.edu
==16147== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16147-by-acompala-on-unix6.lt.ucsc.edu
==16147== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16147-by-acompala-on-unix6.lt.ucsc.edu
==16147== 
==16147== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16147== don't want to do, unless you know exactly what you're doing,
==16147== or are doing some strange experiment):
==16147==   /opt/rh/devtoolset-11/root/usr/libexec/valgrind/../../bin/vgdb --pid=16147 ...command...
==16147== 
==16147== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16147==   /path/to/gdb ./Lex
==16147== and then give GDB the following command
==16147==   target remote | /opt/rh/devtoolset-11/root/usr/libexec/valgrind/../../bin/vgdb --pid=16147
==16147== --pid is optional if only one valgrind process is running
==16147== 
--16147-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580cd495 (???)
--16147-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x580cd4af (???)
--16147-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--16147-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==16147== WARNING: new redirection conflicts with existing -- ignoring it
--16147--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x580cd495 ???
--16147--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c30990 strlen
--16147-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c31aa0 (strcmp)
--16147-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c35b30 (mempcpy)
--16147-- Reading syms from /usr/lib64/libc-2.17.so
--16147--   Considering /usr/lib/debug/.build-id/94/70e279388f7f9cb2ed3b2872d0c2095b191ff4.debug ..
--16147--   .. build-id is valid
--16147-- REDIR: 0x4ecb1d0 (libc.so.6:strcasecmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4ec7f40 (libc.so.6:strnlen) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4ecd4d0 (libc.so.6:strncasecmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4eca9a0 (libc.so.6:memset) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4eca950 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4ec9930 (libc.so.6:__GI_strrchr) redirected to 0x4c30350 (__GI_strrchr)
--16147-- REDIR: 0x4ec0740 (libc.so.6:malloc) redirected to 0x4c2afe0 (malloc)
--16147-- REDIR: 0x4ee0a10 (libc.so.6:__GI_strstr) redirected to 0x4c35dc0 (__strstr_sse2)
--16147-- REDIR: 0x4eca030 (libc.so.6:memchr) redirected to 0x4c31b40 (memchr)
--16147-- REDIR: 0x4ecfc30 (libc.so.6:__GI_memcpy) redirected to 0x4c32750 (__GI_memcpy)
--16147-- REDIR: 0x4ec1160 (libc.so.6:calloc) redirected to 0x4c2f72e (calloc)
--16147-- REDIR: 0x4ec7e10 (libc.so.6:strlen) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4faa8b0 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c308d0 (strlen)
--16147-- REDIR: 0x4ec7850 (libc.so.6:strcpy) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4ed57d0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c309b0 (strcpy)
==16147== Invalid write of size 1
==16147==    at 0x4C309E3: strcpy (vg_replace_strmem.c:523)
==16147==    by 0x4013D6: main (Lex.c:51)
==16147==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
--16147-- REDIR: 0x4ec63c0 (libc.so.6:strcmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--16147-- REDIR: 0x4f79fc0 (libc.so.6:__strcmp_sse42) redirected to 0x4c31a50 (__strcmp_sse42)
--16147-- REDIR: 0x4ed14b0 (libc.so.6:strchrnul) redirected to 0x4c35650 (strchrnul)
--16147-- REDIR: 0x4ec0b60 (libc.so.6:free) redirected to 0x4c2d566 (free)
--16147-- REDIR: 0x4ecab70 (libc.so.6:__GI_mempcpy) redirected to 0x4c35860 (__GI_mempcpy)
==16147== Invalid read of size 1
==16147==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==16147==    by 0x4E8E4E8: printf (printf.c:34)
==16147==    by 0x401570: main (Lex.c:81)
==16147==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
--16147-- REDIR: 0x4ec7e60 (libc.so.6:__GI_strlen) redirected to 0x4c308f0 (__GI_strlen)
==16147== Invalid read of size 1
==16147==    at 0x4C30904: __GI_strlen (vg_replace_strmem.c:470)
==16147==    by 0x4EA9FB4: fputs (iofputs.c:34)
==16147==    by 0x4015A2: main (Lex.c:82)
==16147==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
1208111052793164
===
====
=====
every line as a single string
have to do is treat
in accordance with
may appear in tests
out in the PDF
seriously all you
so you better
sometimes tokens
the instructions set
write your program
==16147== 
==16147== HEAP SUMMARY:
==16147==     in use at exit: 312 bytes in 14 blocks
==16147==   total heap usage: 30 allocs, 16 frees, 1,792 bytes allocated
==16147== 
==16147== Searching for pointers to 14 not-freed blocks
==16147== Checked 70,728 bytes
==16147== 
==16147== LEAK SUMMARY:
==16147==    definitely lost: 0 bytes in 0 blocks
==16147==    indirectly lost: 0 bytes in 0 blocks
==16147==      possibly lost: 0 bytes in 0 blocks
==16147==    still reachable: 312 bytes in 14 blocks
==16147==         suppressed: 0 bytes in 0 blocks
==16147== Reachable blocks (those to which a pointer was found) are not shown.
==16147== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==16147== 
==16147== ERROR SUMMARY: 39 errors from 3 contexts (suppressed: 0 from 0)
==16147== 
==16147== 13 errors in context 1 of 3:
==16147== Invalid read of size 1
==16147==    at 0x4C30904: __GI_strlen (vg_replace_strmem.c:470)
==16147==    by 0x4EA9FB4: fputs (iofputs.c:34)
==16147==    by 0x4015A2: main (Lex.c:82)
==16147==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
==16147== 
==16147== 13 errors in context 2 of 3:
==16147== Invalid read of size 1
==16147==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==16147==    by 0x4E8E4E8: printf (printf.c:34)
==16147==    by 0x401570: main (Lex.c:81)
==16147==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
==16147== 
==16147== 13 errors in context 3 of 3:
==16147== Invalid write of size 1
==16147==    at 0x4C309E3: strcpy (vg_replace_strmem.c:523)
==16147==    by 0x4013D6: main (Lex.c:51)
==16147==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==16147==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==16147==    by 0x4013AA: main (Lex.c:50)
==16147== 
==16147== ERROR SUMMARY: 39 errors from 3 contexts (suppressed: 0 from 0)
