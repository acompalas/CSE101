==22099== Memcheck, a memory error detector
==22099== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22099== Using Valgrind-3.17.0-07f0cdcbb4-20210319X and LibVEX; rerun with -h for copyright info
==22099== Command: ./Lex infile3.txt outfile3.txt
==22099== 
--22099-- Valgrind options:
--22099--    --leak-check=full
--22099--    -v
--22099-- Contents of /proc/version:
--22099--   Linux version 3.10.0-1160.76.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Wed Aug 10 16:21:17 UTC 2022
--22099-- 
--22099-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--22099-- Page sizes: currently 4096, max supported 4096
--22099-- Valgrind library directory: /opt/rh/devtoolset-11/root/usr/libexec/valgrind
--22099-- Reading syms from /afs/cats.ucsc.edu/users/m/acompala/cse101/pa1/Lex
--22099-- Reading syms from /usr/lib64/ld-2.17.so
--22099--   Considering /usr/lib/debug/.build-id/62/c449974331341bb08dcce3859560a22af1e172.debug ..
--22099--   .. build-id is valid
--22099-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/memcheck-amd64-linux
--22099--    object doesn't have a symbol table
--22099--    object doesn't have a dynamic symbol table
--22099-- Scheduler: using generic scheduler lock implementation.
--22099-- Reading suppressions file: /opt/rh/devtoolset-11/root/usr/libexec/valgrind/default.supp
==22099== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-22099-by-acompala-on-unix4.lt.ucsc.edu
==22099== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-22099-by-acompala-on-unix4.lt.ucsc.edu
==22099== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-22099-by-acompala-on-unix4.lt.ucsc.edu
==22099== 
==22099== TO CONTROL THIS PROCESS USING vgdb (which you probably
==22099== don't want to do, unless you know exactly what you're doing,
==22099== or are doing some strange experiment):
==22099==   /opt/rh/devtoolset-11/root/usr/libexec/valgrind/../../bin/vgdb --pid=22099 ...command...
==22099== 
==22099== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==22099==   /path/to/gdb ./Lex
==22099== and then give GDB the following command
==22099==   target remote | /opt/rh/devtoolset-11/root/usr/libexec/valgrind/../../bin/vgdb --pid=22099
==22099== --pid is optional if only one valgrind process is running
==22099== 
--22099-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580cd495 (???)
--22099-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x580cd4af (???)
--22099-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--22099-- Reading syms from /opt/rh/devtoolset-11/root/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==22099== WARNING: new redirection conflicts with existing -- ignoring it
--22099--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x580cd495 ???
--22099--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c30990 strlen
--22099-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c31aa0 (strcmp)
--22099-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c35b30 (mempcpy)
--22099-- Reading syms from /usr/lib64/libc-2.17.so
--22099--   Considering /usr/lib/debug/.build-id/94/70e279388f7f9cb2ed3b2872d0c2095b191ff4.debug ..
--22099--   .. build-id is valid
--22099-- REDIR: 0x4ecb1d0 (libc.so.6:strcasecmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4ec7f40 (libc.so.6:strnlen) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4ecd4d0 (libc.so.6:strncasecmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4eca9a0 (libc.so.6:memset) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4eca950 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4ec9930 (libc.so.6:__GI_strrchr) redirected to 0x4c30350 (__GI_strrchr)
--22099-- REDIR: 0x4ec0740 (libc.so.6:malloc) redirected to 0x4c2afe0 (malloc)
--22099-- REDIR: 0x4ee0a10 (libc.so.6:__GI_strstr) redirected to 0x4c35dc0 (__strstr_sse2)
--22099-- REDIR: 0x4eca030 (libc.so.6:memchr) redirected to 0x4c31b40 (memchr)
--22099-- REDIR: 0x4ecfc30 (libc.so.6:__GI_memcpy) redirected to 0x4c32750 (__GI_memcpy)
--22099-- REDIR: 0x4ec1160 (libc.so.6:calloc) redirected to 0x4c2f72e (calloc)
--22099-- REDIR: 0x4ec7e10 (libc.so.6:strlen) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4faa8b0 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c308d0 (strlen)
--22099-- REDIR: 0x4ec7850 (libc.so.6:strcpy) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4ed57d0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c309b0 (strcpy)
==22099== Invalid write of size 1
==22099==    at 0x4C309E3: strcpy (vg_replace_strmem.c:523)
==22099==    by 0x4013D9: main (Lex.c:51)
==22099==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
--22099-- REDIR: 0x4ed14b0 (libc.so.6:strchrnul) redirected to 0x4c35650 (strchrnul)
==22099== Invalid read of size 1
==22099==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==22099==    by 0x4E8E4E8: printf (printf.c:34)
==22099==    by 0x401402: main (Lex.c:52)
==22099==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
--22099-- REDIR: 0x4ec0b60 (libc.so.6:free) redirected to 0x4c2d566 (free)
--22099-- REDIR: 0x4ecab70 (libc.so.6:__GI_mempcpy) redirected to 0x4c35860 (__GI_mempcpy)
--22099-- REDIR: 0x4ec63c0 (libc.so.6:strcmp) redirected to 0x4a247af (_vgnU_ifunc_wrapper)
--22099-- REDIR: 0x4f79fc0 (libc.so.6:__strcmp_sse42) redirected to 0x4c31a50 (__strcmp_sse42)
==22099== Invalid read of size 1
==22099==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==22099==    by 0x4E8E4E8: printf (printf.c:34)
==22099==    by 0x40159C: main (Lex.c:82)
==22099==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
--22099-- REDIR: 0x4ec7e60 (libc.so.6:__GI_strlen) redirected to 0x4c308f0 (__GI_strlen)
==22099== Invalid read of size 1
==22099==    at 0x4C30904: __GI_strlen (vg_replace_strmem.c:470)
==22099==    by 0x4EA9FB4: fputs (iofputs.c:34)
==22099==    by 0x4015CE: main (Lex.c:83)
==22099==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
====
sometimes tokens
may appear in tests
so you better
write your program
in accordance with
the instructions set
out in the PDF
=====
seriously all you
have to do is treat
every line as a single string
===
12014
===
====
sometimes tokens
write your program
==22099== 
==22099== HEAP SUMMARY:
==22099==     in use at exit: 528 bytes in 23 blocks
==22099==   total heap usage: 30 allocs, 7 frees, 1,792 bytes allocated
==22099== 
==22099== Searching for pointers to 23 not-freed blocks
==22099== Checked 70,728 bytes
==22099== 
==22099== 216 (48 direct, 168 indirect) bytes in 2 blocks are definitely lost in loss record 4 of 4
==22099==    at 0x4C2B067: malloc (vg_replace_malloc.c:380)
==22099==    by 0x40164A: newNode (List.c:42)
==22099==    by 0x401D9E: insertBefore (List.c:279)
==22099==    by 0x40150D: main (Lex.c:70)
==22099== 
==22099== LEAK SUMMARY:
==22099==    definitely lost: 48 bytes in 2 blocks
==22099==    indirectly lost: 168 bytes in 7 blocks
==22099==      possibly lost: 0 bytes in 0 blocks
==22099==    still reachable: 312 bytes in 14 blocks
==22099==         suppressed: 0 bytes in 0 blocks
==22099== Reachable blocks (those to which a pointer was found) are not shown.
==22099== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22099== 
==22099== ERROR SUMMARY: 35 errors from 5 contexts (suppressed: 0 from 0)
==22099== 
==22099== 4 errors in context 1 of 5:
==22099== Invalid read of size 1
==22099==    at 0x4C30904: __GI_strlen (vg_replace_strmem.c:470)
==22099==    by 0x4EA9FB4: fputs (iofputs.c:34)
==22099==    by 0x4015CE: main (Lex.c:83)
==22099==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
==22099== 
==22099== 4 errors in context 2 of 5:
==22099== Invalid read of size 1
==22099==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==22099==    by 0x4E8E4E8: printf (printf.c:34)
==22099==    by 0x40159C: main (Lex.c:82)
==22099==  Address 0x5209a34 is 0 bytes after a block of size 4 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
==22099== 
==22099== 13 errors in context 3 of 5:
==22099== Invalid read of size 1
==22099==    at 0x4E88079: vfprintf (vfprintf.c:1635)
==22099==    by 0x4E8E4E8: printf (printf.c:34)
==22099==    by 0x401402: main (Lex.c:52)
==22099==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
==22099== 
==22099== 13 errors in context 4 of 5:
==22099== Invalid write of size 1
==22099==    at 0x4C309E3: strcpy (vg_replace_strmem.c:523)
==22099==    by 0x4013D9: main (Lex.c:51)
==22099==  Address 0x52095f5 is 0 bytes after a block of size 5 alloc'd
==22099==    at 0x4C2F7C8: calloc (vg_replace_malloc.c:1117)
==22099==    by 0x4013AD: main (Lex.c:50)
==22099== 
==22099== ERROR SUMMARY: 35 errors from 5 contexts (suppressed: 0 from 0)
